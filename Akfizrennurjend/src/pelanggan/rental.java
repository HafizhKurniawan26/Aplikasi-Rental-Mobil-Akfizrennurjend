/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pelanggan;

import config.databaseConnection;
import config.userSession;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hafizh Kurniawan
 */
public class rental extends javax.swing.JFrame {
    public String gstatus;

    /**
     * Creates new form rental
     */
    public rental() {
        initComponents();
        tampilkanRental();
    }
    
    public void tampilkanRental() {
        try{
            int idUser = userSession.getIdUser();
            Connection conn = databaseConnection.connect();
            String sql = "SELECT r.id_rental, r.id_user, r.id_mobil, u.nama, m.merk, m.model, r.tanggal_sewa,"
                    + "r.tanggal_kembali, r.total_biaya, r.status FROM rental r INNER JOIN users u "
                    + "ON u.id_user = r.id_user INNER JOIN mobil m ON m.id_mobil = r.id_mobil "
                    + "WHERE u.id_user = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, idUser);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID Rental");
            model.addColumn("ID User");
            model.addColumn("Nama");
            model.addColumn("ID Mobil");
            model.addColumn("Merk");
            model.addColumn("Model");
            model.addColumn("Tanggal Sewa");
            model.addColumn("Tanggal Kembali");
            model.addColumn("Total Biaya");
            model.addColumn("Status");

            while (rs.next()){
                model.addRow(new Object[]{
                rs.getInt("id_rental"),
                rs.getInt("id_user"),
                rs.getString("nama"),
                rs.getString("id_mobil"),
                rs.getString("merk"),
                rs.getString("model"),
                rs.getString("tanggal_sewa"),
                rs.getString("tanggal_kembali"),
                rs.getString("total_biaya"),
                rs.getString("status")
                });
            }
            
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jComboBox1.setEnabled(false);
            jTextField2.setText(String.valueOf(idUser));
            
            String idMobilSession = userSession.getIdMobil();
            jTextField3.setText(idMobilSession);


            jTable1.setModel(model);
            } catch (Exception e){
                JOptionPane.showMessageDialog(this, "Error: "+ e.getMessage());
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("FORM TRANSAKSI RENTAL");

        jLabel2.setText("ID Rental");

        jLabel3.setText("ID User");

        jLabel4.setText("ID Mobil");

        jLabel5.setText("Tanggal Sewa");

        jLabel6.setText("Tanggal Kembali");

        jLabel8.setText("Status");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Simpan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pending", "diproses", "selesai", "dibatalkan" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setText("<-");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Lanjutkan Pembayaran");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField2)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        // Validasi input
        if (jTextField3.getText().trim().isEmpty() || 
            jTextField4.getText().trim().isEmpty() || 
            jTextField5.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field wajib diisi");
            return;
        }

        // Ambil nilai dari form
        int idUser = Integer.parseInt(jTextField2.getText());
        String idMobil = jTextField3.getText().trim();
        String tanggalSewa = jTextField4.getText().trim();
        String tanggalKembali = jTextField5.getText().trim();

        try (Connection conn = databaseConnection.connect()) {
            conn.setAutoCommit(false); // Mulai transaction
            
            try {
                // 1. Cek ketersediaan mobil
                String checkQuery = "SELECT harga_sewa, status FROM mobil WHERE id_mobil = ?";
                try (PreparedStatement checkStmt = conn.prepareStatement(checkQuery)) {
                    checkStmt.setString(1, idMobil);
                    ResultSet rs = checkStmt.executeQuery();
                    
                    if (!rs.next()) {
                        JOptionPane.showMessageDialog(this, "Mobil tidak ditemukan");
                        return;
                    }
                    
                    // 2. Cek apakah mobil tersedia
                    if ("disewa".equals(rs.getString("status"))) {
                        JOptionPane.showMessageDialog(this, "Mobil sedang disewa");
                        return;
                    }
                    
                    double hargaPerHari = rs.getDouble("harga_sewa");

                    // 3. Hitung total biaya
                    java.sql.Date tglSewa = java.sql.Date.valueOf(tanggalSewa);
                    java.sql.Date tglKembali = java.sql.Date.valueOf(tanggalKembali);
                    long diffDays = ChronoUnit.DAYS.between(tglSewa.toLocalDate(), tglKembali.toLocalDate());
                    int jumlahHari = (int) Math.max(diffDays, 1);
                    double totalBiaya = hargaPerHari * jumlahHari;

                    // 4. Insert data rental
                    String insertQuery = "INSERT INTO rental (id_user, id_mobil, tanggal_sewa, " +
                            "tanggal_kembali, total_biaya, status) VALUES (?, ?, ?, ?, ?, ?)";
                    try (PreparedStatement insertStmt = conn.prepareStatement(insertQuery)) {
                        insertStmt.setInt(1, idUser);
                        insertStmt.setString(2, idMobil);
                        insertStmt.setDate(3, tglSewa);
                        insertStmt.setDate(4, tglKembali);
                        insertStmt.setDouble(5, totalBiaya);
                        insertStmt.setString(6, "pending");
                        insertStmt.executeUpdate();
                    }

                    // 5. Update status mobil dalam transaction yang sama
                    updateStatusMobil(conn, idMobil);
                    
                    conn.commit(); // Commit transaction
                    
                    JOptionPane.showMessageDialog(this, 
                        "Penyewaan berhasil. Total biaya: Rp" + String.format("%.2f", totalBiaya));
                    
                    // Reset form
                    resetFormRental();
                    tampilkanRental();
                }
            } catch (SQLException e) {
                conn.rollback(); // Rollback jika ada error
                JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
                e.printStackTrace();
                throw e;
            }
        }
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, "Format tanggal salah (gunakan yyyy-mm-dd)");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void resetFormRental() {
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jComboBox1.setSelectedIndex(-1);
        userSession.clearSelectedMobil();
    }
    
    // Method untuk update status mobil dengan connection yang sudah ada
    private void updateStatusMobil(Connection conn, String idMobil) throws SQLException {
        String sql = "UPDATE mobil SET status = 'disewa' WHERE id_mobil = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, idMobil);
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                System.out.println("Status mobil berhasil diupdate untuk ID: " + idMobil);
            } else {
                throw new SQLException("Tidak ada mobil yang diupdate untuk ID: " + idMobil);
            }
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

        if(selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit");
            return;
        }

        // Get data from selected row
        int idRental = (int) jTable1.getValueAt(selectedRow, 0);
        int idUser = (int) jTable1.getValueAt(selectedRow, 1);
        String idMobil = (String) jTable1.getValueAt(selectedRow, 3);
        String tanggalSewa = jTable1.getValueAt(selectedRow, 6).toString().split(" ")[0];
        String tanggalKembali = jTable1.getValueAt(selectedRow, 7).toString().split(" ")[0];
        String status = jTable1.getValueAt(selectedRow, 9).toString();

        // Populate form fields with selected data
        jTextField1.setText(String.valueOf(idRental));
        jTextField2.setText(String.valueOf(idUser));
        jTextField3.setText(String.valueOf(idMobil));
        jTextField4.setText(tanggalSewa);
        jTextField5.setText(tanggalKembali);
        jComboBox1.setSelectedItem(status);
        jTextField1.setEnabled(false); // Disable ID field

        // Change save button to update mode
        jButton1.setText("Update");
        jButton1.removeActionListener(jButton1.getActionListeners()[0]);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDataRental();
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void updateDataRental() {
        int id_rental = Integer.parseInt(jTextField1.getText().trim());
        int id_user = Integer.parseInt(jTextField2.getText().trim());
        String id_mobil = jTextField3.getText().trim();
        String tanggalSewa = jTextField4.getText().trim();
        String tanggalKembali = jTextField5.getText().trim();
        String status = (String) jComboBox1.getSelectedItem();

        if (tanggalSewa.isEmpty() || tanggalKembali.isEmpty() || jComboBox1.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Semua field wajib diisi!");
            return;
        }

        try (Connection conn = databaseConnection.connect()) {
            // Hitung ulang total biaya
            String getHargaQuery = "SELECT harga_sewa FROM mobil WHERE id_mobil = ?";
            PreparedStatement hargaStmt = conn.prepareStatement(getHargaQuery);
            hargaStmt.setString(1, id_mobil);
            ResultSet rs = hargaStmt.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "Mobil tidak ditemukan");
                return;
            }
            
            LocalDate sewaDate = LocalDate.parse(jTextField4.getText().trim());
            LocalDate kembaliDate = LocalDate.parse(jTextField5.getText().trim());

            double hargaPerHari = rs.getDouble("harga_sewa");
            long diffDays = ChronoUnit.DAYS.between(
              sewaDate, kembaliDate
            );
            double totalBiaya = hargaPerHari * Math.max(diffDays, 1);

            // Update data
            String sql = "UPDATE rental SET id_user=?, id_mobil=?, tanggal_sewa=?, "
                       + "tanggal_kembali=?, total_biaya=?, status=? WHERE id_rental=?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, id_user);
            stmt.setString(2, id_mobil);
            stmt.setDate(3, java.sql.Date.valueOf(sewaDate)); // Hanya date
            stmt.setDate(4, java.sql.Date.valueOf(kembaliDate));
            stmt.setDouble(5, totalBiaya);
            stmt.setString(6, status);
            stmt.setInt(7, id_rental);

            int rowsUpdated = stmt.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data Rental berhasil diupdate.");
                // Reset form
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jComboBox1.setSelectedIndex(-1);
                jTextField1.setEnabled(true);

                // Change button back to save mode
                jButton1.setText("Simpan");
                jButton1.removeActionListener(jButton1.getActionListeners()[0]);
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton1ActionPerformed(evt);
                    }
                });

                tampilkanRental();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
            "Yakin ingin menghapus transaksi ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            int idRental = (int) jTable1.getValueAt(selectedRow, 0); // ambil ID di kolom 0

            try (Connection conn = databaseConnection.connect();
                PreparedStatement stmt = conn.prepareStatement("DELETE FROM rental WHERE id_rental = ?")) {
                stmt.setInt(1, idRental);
                stmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Transaksi rental berhasil dihapus.");
                tampilkanRental(); // refresh tabel
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus transaksi rental: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex() == 0){
            gstatus = "pending";
        }else if(jComboBox1.getSelectedIndex() == 1){
            gstatus = "diproses";
        }else if(jComboBox1.getSelectedIndex() == 2){
            gstatus = "selesai";
        }else if(jComboBox1.getSelectedIndex() == 3){
            gstatus = "dibatalkan";
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new dashboardPelanggan().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       int selectedRow = jTable1.getSelectedRow();

        if(selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris untuk melanjutkan pembayaran");
            return;
        }
        
        int idRental = (int) jTable1.getValueAt(selectedRow, 0);
        
        userSession.setSelectedRental(idRental);
        
        new pembayaran().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rental().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
